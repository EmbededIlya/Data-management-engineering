import sqlite3
from sqlalchemy import create_engine, text, inspect
import pandas as pd

# --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫—Ä–µ–¥–æ–≤ ---
def load_creds(db_file="creds.db"):
    conn = sqlite3.connect(db_file)
    user, pwd, url, port = conn.execute("SELECT user, pass, url, port FROM access LIMIT 1").fetchone()
    conn.close()
    return {
        "user": user,
        "pwd": pwd,
        "url": url,
        "port": str(port),
        "db": "homeworks"
    }

# --- –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ ---
if __name__ == "__main__":
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—Ä–µ–¥—ã –∏ —Å–æ–∑–¥–∞—ë–º –¥–≤–∏–∂–æ–∫
    creds = load_creds()
    engine = create_engine(f"postgresql+psycopg2://{creds['user']}:{creds['pwd']}@{creds['url']}:{creds['port']}/{creds['db']}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    try:
        with engine.connect() as conn:
            version = conn.execute(text("SELECT version();")).fetchone()
            print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ: {version[0]}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        exit(1)

    # --- –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞—Ç–∞—Å–µ—Ç –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –µ–≥–æ –≤ timofeev ---
    data_path = r"C:\Python_projects\Data-management-engineering\notebook\data\dataset.brick"
    df = pd.read_parquet(data_path).head(100)
    df.reset_index(drop=True, inplace=True)
    df.insert(0, "id", range(1, len(df)+1))  # PK
    df.to_sql("timofeev", engine, schema="public", if_exists="replace", index=False)
    print("‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É public.timofeev")

    # --- –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü ---
    inspector = inspect(engine)
    tables = inspector.get_table_names(schema="public")
    print("\nüìã –¢–∞–±–ª–∏—Ü—ã –≤ —Å—Ö–µ–º–µ public:")
    for t in tables:
        print(f" - {t}")

    # --- –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ timofeev ---
    df_check = pd.read_sql_table("timofeev", engine, schema="public")
    print("\nüìÑ –ü–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã timofeev:")
    print(df_check.head())
